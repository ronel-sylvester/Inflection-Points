# -*- coding: utf-8 -*-
"""Inflection_Points.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16cquzbxS5_XcEdPw_TBS71_zZzi7QBkn
"""

from skimage import data, filters
import cv2
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

img = cv2.imread('/content/drive/MyDrive/Computer Vision/Overlap_Circles.JPG')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
ret, thresh = cv2.threshold(gray,200,255,1)
contours, h = cv2.findContours(thresh,cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
for cnt in contours:
    cv2.drawContours(img,[cnt],0,(0,0,255),2)
plt.figure(figsize = (20,15))
plt.imshow(img, aspect = 'auto')
contours = np.array(contours).reshape(len(contours[0]), 2)[::-1]
print(len(contours))

cont_x = []
for i in contours:
  cont_x.append(i[0])
max_left_x = np.min(cont_x)
cont_y = []
max_left_idx = []
for i in range(len(contours)):
  if contours[i][0] == max_left_x:
    cont_y.append(contours[i][1])
    max_left_idx.append(i)
max_left_y = np.max(cont_y)
max_left_idx = max_left_idx[np.where(cont_y == max_left_y)[0][0]]
print(max_left_x, max_left_y, max_left_idx)
contours = np.concatenate((contours[max_left_idx:], contours[:max_left_idx]))
contours

#up right !--> up left/down left
#down right !--> up right/up left
#down left !-->  down right/up right
#up left !--> down left/down right

#right up --> right --> right down --> down --> left down --> left --> left up --> up



slopes = {(1,1): (1, -1), #ru --> rd
          (1,-1): (-1,-1), #rd --> ld
          (-1,-1): (-1,1), #ld --> lu
          (-1,1): (1,1)} #lu --> ru

prev_slope = (1,1)
inflections = []
k = 2
for c in range(len(contours) - k):
  if contours[c+k][0] < contours[c][0]:
    x_dir = -1
    if contours[c+k][1] <= contours[c][1]:
      y_dir = 1
    elif contours[c+k][1] > contours[c][1]:
      y_dir = -1
  elif contours[c+k][0] >= contours[c][0]:
    x_dir = 1
    if contours[c+k][1] <= contours[c][1]:
      y_dir = 1
    elif contours[c+k][1] > contours[c][1]:
      y_dir = -1
  
  slope = (x_dir, y_dir)
  if slope != prev_slope and slope != slopes[prev_slope]:
    inflections.append((contours[c][0], contours[c][1]))
  prev_slope = slope
  #print(slope)
inflections

img = cv2.imread('/content/drive/MyDrive/Computer Vision/Overlap_Circles.JPG')

for i in inflections:
  inflec_img = cv2.circle(img,i,5,(0,0,255),3)

plt.imshow(inflec_img)